import React, { useState, useEffect } from "react";
import { useDispatch,useSelector  } from "react-redux";
import { fetchSettings } from "./store/store"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º action
import HomePage from "./pages/HomePage.jsx";
import EditPanel from "./components/EditPanel.jsx";

function App() {
  const [isPanelOpen, setIsPanelOpen] = useState(true);
  const dispatch = useDispatch();
  const siteState = useSelector((state) => state.site); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π state


  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ MongoDB –≤ Redux –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  useEffect(() => {
    dispatch(fetchSettings());
  }, [dispatch]);

  console.log("üîç –¢–µ–∫—É—â–∏–π Redux State:", siteState); // –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å

  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
  if (!siteState.logo) {
    return <div className="flex items-center justify-center h-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
}

  return (
    <div className="relative flex h-screen transition-all duration-300">
      {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –∏–∑–º–µ–Ω—è–µ—Ç —à–∏—Ä–∏–Ω—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ */}
      <div className={`transition-all duration-300 ${isPanelOpen ? "w-[calc(100%-18rem)]" : "w-full"}`}>
        <HomePage />
      </div>

      {/* –ü–∞–Ω–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <EditPanel isOpen={isPanelOpen} togglePanel={() => setIsPanelOpen(!isPanelOpen)} />
    </div>
  );
}

export default App;
